[{"/Users/dmitry/Desktop/pomodoro-app/src/index.js":"1","/Users/dmitry/Desktop/pomodoro-app/src/App.js":"2","/Users/dmitry/Desktop/pomodoro-app/src/components/Timer.jsx":"3","/Users/dmitry/Desktop/pomodoro-app/src/components/Select.jsx":"4","/Users/dmitry/Desktop/pomodoro-app/src/components/Button.jsx":"5","/Users/dmitry/Desktop/pomodoro-app/src/components/Header.jsx":"6"},{"size":312,"mtime":1635447434955,"results":"7","hashOfConfig":"8"},{"size":537,"mtime":1635447504979,"results":"9","hashOfConfig":"8"},{"size":897,"mtime":1635446154168,"results":"10","hashOfConfig":"8"},{"size":116,"mtime":1635445947930,"results":"11","hashOfConfig":"8"},{"size":111,"mtime":1635446619483,"results":"12","hashOfConfig":"8"},{"size":699,"mtime":1635447383615,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ogwcws",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dmitry/Desktop/pomodoro-app/src/index.js",[],"/Users/dmitry/Desktop/pomodoro-app/src/App.js",["28"],"/Users/dmitry/Desktop/pomodoro-app/src/components/Timer.jsx",["29"],"import React, { useState, useEffect } from \"react\";\nimport Select from \"./Select\";\nimport Button from \"./Button\";\n\nexport default function Timer() {\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          console.log(\"DONE\");\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n  }, [seconds]);\n\n  const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  return (\n    <div className=\"pomodoro\">\n      <Select />\n      <Button />\n      <div className=\"timer\">\n        {timerMinutes}:{timerSeconds}\n      </div>\n    </div>\n  );\n}\n",["30","31"],"/Users/dmitry/Desktop/pomodoro-app/src/components/Select.jsx",[],"/Users/dmitry/Desktop/pomodoro-app/src/components/Button.jsx",[],"/Users/dmitry/Desktop/pomodoro-app/src/components/Header.jsx",[],{"ruleId":"32","severity":1,"message":"33","line":4,"column":8,"nodeType":"34","messageId":"35","endLine":4,"endColumn":13},{"ruleId":"36","severity":1,"message":"37","line":24,"column":6,"nodeType":"38","endLine":24,"endColumn":15,"suggestions":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},"no-unused-vars","'Timer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'minutes'. Either include it or remove the dependency array. You can also do a functional update 'setMinutes(m => ...)' if you only need 'minutes' in the 'setMinutes' call.","ArrayExpression",["44"],"no-native-reassign",["45"],"no-negated-in-lhs",["46"],{"desc":"47","fix":"48"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [minutes, seconds]",{"range":"49","text":"50"},[582,591],"[minutes, seconds]"]