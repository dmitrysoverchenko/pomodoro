{"ast":null,"code":"var _jsxFileName = \"/Users/dmitry/Desktop/pomodoro-app/src/components/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [displayMessage, setDisplayMessage] = useState(false);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          let minutes = displayMessage ? 24 : 4;\n          let seconds = 59;\n          setSeconds(seconds);\n          setMinutes(minutes);\n          setDisplayMessage(!displayMessage);\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n  }, [seconds]);\n  const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: displayMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Break time! New session starts in:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [timerMinutes, \":\", timerSeconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timer, \"r5I4HSPoe+iNlkI8hitDkBV2F5w=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/dmitry/Desktop/pomodoro-app/src/components/Timer.jsx"],"names":["React","useState","useEffect","Timer","minutes","setMinutes","seconds","setSeconds","displayMessage","setDisplayMessage","interval","setInterval","clearInterval","timerMinutes","timerSeconds"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BC,MAAAA,aAAa,CAACF,QAAD,CAAb;;AAEA,UAAIJ,OAAO,KAAK,CAAhB,EAAmB;AACjB,YAAIF,OAAO,KAAK,CAAhB,EAAmB;AACjBG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,SAHD,MAGO;AACL,cAAIA,OAAO,GAAGI,cAAc,GAAG,EAAH,GAAQ,CAApC;AACA,cAAIF,OAAO,GAAG,EAAd;AAEAC,UAAAA,UAAU,CAACD,OAAD,CAAV;AACAD,UAAAA,UAAU,CAACD,OAAD,CAAV;AACAK,UAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACD;AACF,OAZD,MAYO;AACLD,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;AACF,KAlByB,EAkBvB,IAlBuB,CAA1B;AAmBD,GApBQ,EAoBN,CAACA,OAAD,CApBM,CAAT;AAsBA,QAAMO,YAAY,GAAGT,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAApD;AACA,QAAMU,YAAY,GAAGR,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAApD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGE,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADrB;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACGK,YADH,OACkBC,YADlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAxCuBX,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Timer() {\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [displayMessage, setDisplayMessage] = useState(false);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          let minutes = displayMessage ? 24 : 4;\n          let seconds = 59;\n\n          setSeconds(seconds);\n          setMinutes(minutes);\n          setDisplayMessage(!displayMessage);\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n  }, [seconds]);\n\n  const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"message\">\n        {displayMessage && <div>Break time! New session starts in:</div>}\n      </div>\n      <div className=\"timer\">\n        {timerMinutes}:{timerSeconds}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}